% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/L002_svensson.R
\name{SvenssonAttractor}
\alias{SvenssonAttractor}
\alias{makeSvenssonAttractor}
\alias{runSvenssonAttractor}
\title{Johnny Svensson Attractors}
\usage{
makeSvenssonAttractor(type = "points", ...)

runSvenssonAttractor(
  a = 1.4,
  b = 1.56,
  c = 1.4,
  d = -6.56,
  inputx = 0,
  inputy = 0,
  x = NULL,
  y = NULL,
  runTime = 1e+05,
  sampleSize = NULL,
  reuseInput = FALSE
)
}
\arguments{
\item{type}{The name(s) of the plotting function(s) used to plot the component. Defaults to "points". This can also include the names of classes linked to a plotting function.}

\item{...}{parameters passed to the component and the component function runSvenssonAttractor. See "details" for more information.}

\item{a, b, c, d}{The four parameters of the attractor from the above equations.}

\item{inputx, inputy}{x and y co-ordinates to be used as initial conditions. Both default to 0. This is the default way to give initial conditions. See x,y and reuseInput.}

\item{x, y}{x and y co-ordinates. Can be vectors of the same length. If they are, the final value will represent the current position. Defaults to NULL, which forces the use of inputx and input y. If both are given, reuseInput determines the initial conditions. Using x and y as initial conditions is useful for creating animations where you add more points to the attractor with each frame.}

\item{runTime}{The number of iterations to calculate. Each iteration is added to the end of x and y. Defaults to 100000. sampleSize can be used to trim this down.}

\item{sampleSize}{If a number, x and y are trimmed to this length before being returned using pruneStart. Defaults to NULL which means x and y aren't trimmed.}

\item{reuseInput}{Forces the use of inputx and inputy as initial values. Defaults to FALSE. Setting this to TRUE is useful for creating animations where the parameters a,b,c and d are varied.}
}
\value{
The run function returns a list containing x and y values. The make function returns a component object.
}
\description{
Functions to calculate the sequence of points given by the following dynamical system in order to draw the attractor of the system.
\itemize{
\item \ifelse{html}{\out{x[n+1]=d*sin(a*x[n])-sin(b*y[n])}}{\eqn{LATEX-LIKE CODE}{ASCII}}
\item \ifelse{html}{\out{y[n+1]=c*cos(a*x[n])+cos(b*y[n])}}{\eqn{LATEX-LIKE CODE}{ASCII}}
}

runSvenssonAttractor calculates the attractor. makeSvenssonAttractor makes a component that calculates and plots the Attractor.
}
\details{
style, units, p, functions, active, visible, and frames are passed to the component slots of the same name.

ref is a vector of data references that are added to the p slot in the component

.frames, .plotting and .repeats control the run function

All other parameters are added to the p slot in the component. This can include graphical parameters for the plotting function(s) or the run function.
}
\examples{
art=makeSvenssonAttractor(cex=0.1,col=rgb(0,0,0,0.1))
easyPlot(art,preserveAspectRatio=TRUE)
}
\seealso{
\url{http://paulbourke.net/fractals/peterdejong/}

Other 2dAttractors: 
\code{\link{DeJongAttractor}}
}
\concept{2dAttractors}
